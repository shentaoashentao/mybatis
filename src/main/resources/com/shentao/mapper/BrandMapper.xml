<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.shentao.mapper.BrandMapper">

    <!--  若遇到定义的pojo与数据库内的字段名称不一样时
    column="brand_name" property="brandName"
    column代表要改成的值    property代表pojo定义的值
    -->

    <resultMap id="brandResultMap" type="com.shentao.pojo.Brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select * from tb_brand;
    </select>

    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id = #{id};
    </select>

    <!--条件查询-->
   <!-- <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
            and company_name like #{companyName}
            and brand_name like #{brandName};
    </select>-->
    <!--动态sql条件查询   采用if标签 test中表示 逻辑表达式-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
       <where>        <!--  1=1  使得每句都加and符合逻辑   都没有and的情况下：1.第一第二两条进行查询时 缺少and 2.没有第一条时  第二条有多出and -->
              <if test="status != null">
                  and status = #{status}
              </if>
          <if test="companyName != null and companyName != ''">
                  and  company_name like #{companyName}
          </if>
        <if test="brandName != null and brandName != ''">
           and  brand_name like #{brandName}
        </if>
        </where>
    </select>

<!--单条件查询-->
    <select id="selectByConditionSinglingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
        <choose><!--相当于switch-->
            <when test="status != null"><!--相当于case-->
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
        </choose>
        </where>
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name,company_name,ordered,description,status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>


    <update id="update"><!--修改动态字段-->
        update tb_brand
        <set>
        <if test="brandName != null and brandName != ''">
            brand_name=#{brandName},
        </if>
        <if test="companyName != null and companyName != ''">
            company_name=#{companyName},
        </if>
        <if test="ordered  !=  null">
            ordered=#{ordered},
        </if>
        <if test="description != null and description != ''">
            description=#{description},
        </if>
        <if test="status != null">
            status=#{status}
        </if>
    </set>
        where id =#{id};

    </update>

    <delete id="deleteById">
    delete from tb_brand where id=#{id};

    </delete>

    <!--mybatis会将数组参数封装成为一个Map集合   array=数组  使用@Param注解改变map集合的默认key的名称-->
    <delete id="deleteByIds">
        delete from tb_brand where id
    in(
        <foreach collection="ids" item="id" separator=",">
        #{id}
        </foreach>               )

    </delete>
</mapper>